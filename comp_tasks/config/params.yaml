/task:
  ros__parameters:
    distance_to_move: 20.0
    angle_from_target: 20.0
    camera_res_x: 640
    camera_fov: 70
    finish_lat: 63.4411718
    finish_lon: 10.4237096
    recovery_behaviour: STOP
    time_to_pause_search: 3.0
    time_between_recovery_actions: 2.0
    time_to_stop_before_recovery: 20.0
    red_buoy_label: red_buoy
    green_buoy_label: green_buoy
    second_red_buoy_label: red_marker
    second_green_buoy_label: green_marker
    frame_stack_size: 4
    bbox_selection: INNERMOST
/maneuvering:
  ros__parameters:
    distance_to_move: 20.0
    angle_from_target: 20.0
    camera_res_x: 640
    camera_fov: 70
    recovery_behaviour: STOP
    time_to_pause_search: 3.0
    time_between_recovery_actions: 2.0
    time_to_stop_before_recovery: 100.0
    red_buoy_label: red_buoy
    green_buoy_label: green_buoy
    second_red_buoy_label: red_marker
    second_green_buoy_label: green_marker
    frame_stack_size: 4
    bbox_selection: INNERMOST
    max_consec_recoveries: 2
/task_controller:
  ros__parameters:
    tasks: "mds"

docking:
  ros__parameters:
    # Distances
    approach_distance: 3.0  # meters, distance to maintain while approaching
    dock_depth: 2.0        # meters, how far to go into dock
    reverse_distance: 3.0  # meters, how far to reverse after docking
    
    # Target selection
    target_dock: "center"  # left, center, or right
    
    # Debug parameters
    debug_level: 2         # 0=minimal, 1=normal, 2=verbose
    
    # LIDAR processing parameters
    min_wall_points: 5     # minimum points needed to confirm a wall
    wall_distance_tolerance: 0.3  # meters, tolerance for parallel wall check
    alignment_threshold: 0.1      # radians, how precise alignment needs to be
